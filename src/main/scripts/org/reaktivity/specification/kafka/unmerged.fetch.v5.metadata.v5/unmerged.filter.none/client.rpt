#
# Copyright 2016-2020 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property clientAddress "nukleus://streams/kafka#0"

property newRequestId ${kafka:newRequestId()}

property fetchWaitMax 500
property fetchBytesMax 65535
property partitionBytesMax 8192

connect await ROUTED_SERVER
        ${clientAddress}
  option nukleus:window 8192
  option nukleus:transmission "duplex"
  option nukleus:byteorder "network"

connected

write 21                                # size
      3s                                # metadata
      5s                                # v5
      ${newRequestId}
      -1s                               # no client id
      1                                 # topics
        4s "test"                       #   "test" topic
      [0x00]                            # allow_auto_topic_creation

read 150                                # size
     ${newRequestId}
     [0..4]
     2                                  # brokers
       1                                    # broker id
       19s "broker1.example.com"            # host name
       9092                                 # port
       -1s                                  # no rack
       2
       19s "broker2.example.com"
       9092
       -1s
     9s "cluster 1"                     # cluster id
     1                                  # controller id
     1                                  # topics
       0s                                 # no error
       4s "test"                          #   "test" topic
       [0x00]                             # not internal
       2                                  # partitions
         0s                                 # no error
         0                                  # partition
         1                                  # leader
         0                                  # no replicas
         -1                                 # no in-sync replicas
         0                                  # offline replicas
         0s
         1
         2
         0
         -1
         0

read notify PARTITION_COUNT_2

connect await PARTITION_COUNT_2
        ${clientAddress}
  option nukleus:window 8192
  option nukleus:transmission "duplex"
  option nukleus:byteorder "network"

write nukleus:begin.ext ${tcp:beginEx()
                             .typeId(nukleus:id("tcp"))
                             .localAddress("0.0.0.0")
                             .localPort(0)
                             .remoteHost("broker1.example.com")
                             .remotePort(9092)
                             .build()}

connected

write 65                                # size
      1s                                # fetch
      5s                                # v5
      ${newRequestId}
      -1s
      -1
      ${fetchWaitMax}
      1
      ${fetchBytesMax}
      [0x00]
      1
      4s "test"
      1
      0                                 # partition
      1L                                # offset
      -1L
      ${partitionBytesMax}

read 479
     ${newRequestId}
     [0..4]
     1
     4s "test"
     1                                  # partitions
     0                                  # partition
     0s                                 # no error
     -1L                                # no high water mark
     -1L                                # no last stable offset
     -1L                                # no log start offset
     -1                                 # no aborted transaction count
     419                                # record set size
     1L                                 # first offset
     91                                 # length
     0x00
     [0x02]
     0x4e8723aa
     0s
     0                                  # last offset delta
     (long:timestamp)                   # first timestamp
     ${timestamp}                       # last timestamp
     -1L
     -1s
     -1
     1                                  # records
     ${kafka:varint(41)}
     [0x00]
     ${kafka:varint(0)}
     ${kafka:varint(0)}
     ${kafka:varint(4)}                 # key
     "key1"
     ${kafka:varint(16)}                # value
     "Hello, world #A1"
     ${kafka:varint(1)}                 # headers
       ${kafka:varint(7)}                   # key
       "header2"
       ${kafka:varint(6)}                   # value
       "value2"
     2L                                 # first offset
     87                                 # length
     0x00
     [0x02]
     0x4e8723aa
     0s
     0                                  # last offset delta
     (long:timestamp)                   # first timestamp
     ${timestamp}                       # last timestamp
     -1L
     -1s
     -1
     1                                  # records
     ${kafka:varint(37)}
     [0x00]
     ${kafka:varint(0)}
     ${kafka:varint(0)}
     ${kafka:varint(-1)}                # key
     ${kafka:varint(16)}
     "Hello, world #A2"
     ${kafka:varint(1)}                 # headers
       ${kafka:varint(7)}                   # key
       "header1"
       ${kafka:varint(6)}                   # value
       "value1"
     3L                                 # first offset
     91                                 # length
     0x00
     [0x02]
     0x4e8723aa
     0s
     0                                  # last offset delta
     (long:timestamp)                   # first timestamp
     ${timestamp}                       # last timestamp
     -1L
     -1s
     -1
     1                                  # records
     ${kafka:varint(41)}
     [0x00]
     ${kafka:varint(0)}
     ${kafka:varint(0)}
     ${kafka:varint(4)}                 # key
     "key1"
     ${kafka:varint(16)}
     "Hello, world #A3"
     ${kafka:varint(1)}                 # headers
       ${kafka:varint(7)}                   # key
       "header1"
       ${kafka:varint(6)}                   # value
       "value1"
     4L                                 # first offset
     102                                # length
     0x00
     [0x02]
     0x4e8723aa
     0s
     0                                  # last offset delta
     (long:timestamp)                   # first timestamp
     ${timestamp}                       # last timestamp
     -1L
     -1s
     -1
     1                                  # records
     ${kafka:varint(52)}
     [0x00]
     ${kafka:varint(0)}
     ${kafka:varint(0)}
     ${kafka:varint(-1)}                # key
     ${kafka:varint(16)}
     "Hello, world #A4"
     ${kafka:varint(2)}                 # headers
       ${kafka:varint(7)}                   # key
       "header1"
       ${kafka:varint(6)}                   # value
       "value1"
       ${kafka:varint(7)}                   # key
       "header2"
       ${kafka:varint(6)}                   # value
       "value2"

connect await PARTITION_COUNT_2
        ${clientAddress}
  option nukleus:window 8192
  option nukleus:transmission "duplex"
  option nukleus:byteorder "network"

write nukleus:begin.ext ${tcp:beginEx()
                             .typeId(nukleus:id("tcp"))
                             .localAddress("0.0.0.0")
                             .localPort(0)
                             .remoteHost("broker2.example.com")
                             .remotePort(9092)
                             .build()}

connected

write 65                                # size
      1s                                # fetch
      5s                                # v5
      ${newRequestId}
      -1s
      -1
      ${fetchWaitMax}
      1
      ${fetchBytesMax}
      [0x00]
      1
      4s "test"
      1
      1                                 # partition
      1L                                # offset
      -1L
      ${partitionBytesMax}

read 479
     ${newRequestId}
     [0..4]
     1
     4s "test"
     1                                  # partitions
     1                                  # partition
     0s                                 # no error
     -1L                                # no high water mark
     -1L                                # no last stable offset
     -1L                                # no log start offset
     -1                                 # no aborted transaction count
     419                                # record set size
     1L                                 # first offset
     102                                # length
     0x00
     [0x02]
     0x4e8723aa
     0s
     0                                  # last offset delta
     (long:timestamp)                   # first timestamp
     ${timestamp}                       # last timestamp
     -1L
     -1s
     -1
     1                                  # records
     ${kafka:varint(52)}
     [0x00]
     ${kafka:varint(0)}
     ${kafka:varint(0)}
     ${kafka:varint(-1)}                # key
     ${kafka:varint(16)}
     "Hello, world #B1"
     ${kafka:varint(2)}                 # headers
       ${kafka:varint(7)}                   # key
       "header1"
       ${kafka:varint(6)}                   # value
       "value1"
       ${kafka:varint(7)}                   # key
       "header2"
       ${kafka:varint(6)}                   # value
       "value2"
     2L                                 # first offset
     91                                 # length
     0x00
     [0x02]
     0x4e8723aa
     0s
     0                                  # last offset delta
     (long:timestamp)                   # first timestamp
     ${timestamp}                       # last timestamp
     -1L
     -1s
     -1
     1                                  # records
     ${kafka:varint(41)}
     [0x00]
     ${kafka:varint(0)}
     ${kafka:varint(0)}
     ${kafka:varint(4)}                 # key
     "key1"
     ${kafka:varint(16)}
     "Hello, world #B2"
     ${kafka:varint(1)}                 # headers
       ${kafka:varint(7)}                   # key
       "header1"
       ${kafka:varint(6)}                   # value
       "value1"
     3L                                 # first offset
     87                                 # length
     0x00
     [0x02]
     0x4e8723aa
     0s
     0                                  # last offset delta
     (long:timestamp)                   # first timestamp
     ${timestamp}                       # last timestamp
     -1L
     -1s
     -1
     1                                  # records
     ${kafka:varint(37)}
     [0x00]
     ${kafka:varint(0)}
     ${kafka:varint(0)}
     ${kafka:varint(-1)}                # key
     ${kafka:varint(16)}
     "Hello, world #B3"
     ${kafka:varint(1)}                 # headers
       ${kafka:varint(7)}                   # key
       "header1"
       ${kafka:varint(6)}                   # value
       "value1"
     4L                                 # first offset
     91                                 # length
     0x00
     [0x02]
     0x4e8723aa
     0s
     0                                  # last offset delta
     (long:timestamp)                   # first timestamp
     ${timestamp}                       # last timestamp
     -1L
     -1s
     -1
     1                                  # records
     ${kafka:varint(41)}
     [0x00]
     ${kafka:varint(0)}
     ${kafka:varint(0)}
     ${kafka:varint(4)}                 # key
     "key1"
     ${kafka:varint(16)}                # value
     "Hello, world #B4"
     ${kafka:varint(1)}                 # headers
       ${kafka:varint(7)}                   # key
       "header2"
       ${kafka:varint(6)}                   # value
       "value2"
