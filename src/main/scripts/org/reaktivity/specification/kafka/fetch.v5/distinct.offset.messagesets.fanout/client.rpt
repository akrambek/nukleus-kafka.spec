#
# Copyright 2016-2017 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property newNetworkRouteRef  ${nuklei:newReferenceId()} # external

property networkConnect "nukleus://kafka/streams/source"
property networkConnectWindow 8192

property newRequestId1 ${kafka:newRequestId()}
property newRequestId2 ${kafka:newRequestId()}
property newRequestId3 ${kafka:newRequestId()}

connect await ROUTED_SERVER
        ${networkConnect}
  option nukleus:route ${newNetworkRouteRef}
  option nukleus:window ${networkConnectWindow} 
  option nukleus:transmission "duplex"

connected

#write nukleus:order network

write [0x00 0x00 0x00 0x4b]
write [0x00 0x01]
write [0x00 0x05]
write ${newRequestId1}
write [0x00 0x0a] "consumer-1"
write -1
write [0x7f 0xff 0xff 0xff]
write [0x00 0x00 0x00 0x01]
write [0x03 0x20 0x00 0x00]
write 0x00
write [0x00 0x00 0x00 0x01]
write [0x00 0x04] "test"
write [0x00 0x00 0x00 0x01]
write 0x00000000
write [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x01]
write -1L
write ${networkConnectWindow} # currently in native byte order, needs to be in network byte order

write [0x00 0x00 0x00 0x4b]
write [0x00 0x01]
write [0x00 0x05]
write ${newRequestId2}
write [0x00 0x0a] "consumer-1"
write -1
write [0x7f 0xff 0xff 0xff]
write [0x00 0x00 0x00 0x01]
write [0x03 0x20 0x00 0x00]
write 0x00
write [0x00 0x00 0x00 0x01]
write [0x00 0x04] "test"
write [0x00 0x00 0x00 0x01]
write 0x00000000
write [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
write -1L
write ${networkConnectWindow} # currently in native byte order, needs to be in network byte order

read [0x00 0x00 0x00 0x7d]
read ${newRequestId1}
read [0..4]
read [0x00 0x00 0x00 0x01]
read [0x00 0x04] "test"
read [0x00 0x00 0x00 0x01]
read 0
read [0x00 0x00]
read [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x02]
read -1L
read 0L
read -1
read [0x00 0x00 0x00 0x4d]
read [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x01]
read [0x00 0x00 0x00 0x41]
read 0x00000000
read [0x02]
read [0x4e 0x87 0x23 0xaa]
read [0x00 0x00]
read 0
read (long:timestamp1b)
read ${timestamp1b}
read -1L
read [0xff 0xff]
read -1
read [0x00 0x00 0x00 0x01]
read ${kafka:varint(18)}
read [0x00]
read ${kafka:varint(0)}
read ${kafka:varint(0)}
read ${kafka:varint(-1)}
read ${kafka:varint(12)}
read "Hello, again"
read 0x00

write [0x00 0x00 0x00 0x4b]
write [0x00 0x01]
write [0x00 0x05]
write ${newRequestId3}
write [0x00 0x0a] "consumer-1"
write -1
write [0x7f 0xff 0xff 0xff]
write [0x00 0x00 0x00 0x01]
write [0x03 0x20 0x00 0x00]
write 0x00
write [0x00 0x00 0x00 0x01]
write [0x00 0x04] "test"
write [0x00 0x00 0x00 0x01]
write 0x00000000
write [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x02]
write -1L
write ${networkConnectWindow} # currently in native byte order, needs to be in network byte order

read [0x00 0x00 0x00 0x7d]
read ${newRequestId2}
read [0..4]
read [0x00 0x00 0x00 0x01]
read [0x00 0x04] "test"
read [0x00 0x00 0x00 0x01]
read 0
read [0x00 0x00]
read [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x02]
read -1L
read 0L
read -1
read [0x00 0x00 0x00 0x9a]
read [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00]
read [0x00 0x00 0x00 0x41]
read 0x00000000
read [0x02]
read [0x4e 0x87 0x23 0xaa]
read [0x00 0x00]
read 0
read (long:timestamp2a)
read ${timestamp2a}
read -1L
read [0xff 0xff]
read -1
read [0x00 0x00 0x00 0x01]
read ${kafka:varint(18)}
read [0x00]
read ${kafka:varint(0)}
read ${kafka:varint(0)}
read ${kafka:varint(-1)}
read ${kafka:varint(12)}
read "Hello, world"
read 0x00
read [0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x01]
read [0x00 0x00 0x00 0x41]
read 0x00000000
read [0x02]
read [0x4e 0x87 0x23 0xaa]
read [0x00 0x00]
read 0
read (long:timestamp2b)
read ${timestamp2b}
read -1L
read [0xff 0xff]
read -1
read [0x00 0x00 0x00 0x01]
read ${kafka:varint(18)}
read [0x00]
read ${kafka:varint(0)}
read ${kafka:varint(0)}
read ${kafka:varint(-1)}
read ${kafka:varint(12)}
read "Hello, again"
read 0x00
