#
# Copyright 2016-2020 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property newTimestamp ${kafka:timestamp()}

property networkAccept "nukleus://streams/kafka#0"
property networkAcceptWindow 8192

accept ${networkAccept}
  option nukleus:window ${networkAcceptWindow}
  option nukleus:transmission "duplex"
  option nukleus:byteorder "network"

# Metadata connection
accepted
connected

read 21         # Size int32
     0x03s      # ApiKey int16 (Metadata)
     0x05s      # ApiVersion int16
     (int:metadataRequestId)
     -1s        # ClientId string (null)
     1          # [TopicName] array length
       4s "test"
     [0x00]     # allow_auto_topic_creation (boolean)

write 85        # Size int32
      ${metadataRequestId}  # CorrelationId int32
      0         # throttle_time_ms int32
      1         # brokers array length
        1       # broker id
        7s "broker1"
        9093    # port int32
        -1s     # rack string (null)
      9s "cluster 1"
      1         # controller broker id
      1         # topic array length
        0s      # error code
        4s "test"
        byte 0x00           # is_internal
        1       # partition array length
          0s    # error code
          0     # partition
          1     # leader
          0     # replicas array (empty)
          -1    # isr array (null)
          0     # offline replicas array (empty)

read 62         # Size int32
     32s        # ApiKey int16 (DescribeConfigs)
     0s         # ApiVersion int16
     (int:metadataRequestId) # CorrelationId int32
     -1s        # ClientId string (null)
     1          # [Resources] array length
     [0x02]     # resource type int8 (topic) 
     4s "test"  # topic name
     2          # config_names count
     14s "cleanup.policy"
     19s "delete.retention.ms"

write 88        # Size int32
      ${metadataRequestId}  # CorrelationId int32
      0         # throttle_time_ms int32
      1         # resources count
      0s        # error code
      -1s       # error message
      [0x02]    # resource type
      4s "test" # topic name
      2         # config entries count
      14s "cleanup.policy"  # config name
      6s "delete"           # config  value
      [0x00]    # read_only boolean
      [0x01]    # is_default boolean
      [0x00]    # is_sensitive boolean
      19s "delete.retention.ms"
      8s "86400000"
      [0x00]    # read_only boolean
      [0x01]    # is_default boolean
      [0x00]    # is_sensitive boolean

write notify SENT_DESCRIBE_CONFIGS_RESPONSE_ONE

read await RECEIVED_FETCH_REQUEST_ONE

read 22         # Size int32
     0x03s      # ApiKey int16 (Metadata)
     0x05s      # ApiVersion int16
     (int:metadataRequestId)
     -1s        # ClientId string (null)
     1          # [TopicName] array length
       5s "test2"
     [0x00]     # allow_auto_topic_creation (boolean)

write 86        # Size int32
      ${metadataRequestId}  # CorrelationId int32
      0         # throttle_time_ms int32
      1         # brokers array length
        1       # broker id
        7s "broker1"
        9093    # port int32
        -1s     # rack string (null)
      9s "cluster 1"
      1         # controller broker id
      1         # topic array length
        0s      # error code
        5s "test2"
        byte 0x00           # is_internal
        1       # partition array length
          0s    # error code
          0     # partition
          1     # leader
          0     # replicas array (empty)
          -1    # isr array (null)
          0     # offline replicas array (empty)

read 63         # Size int32
     32s        # ApiKey int16 (DescribeConfigs)
     0s         # ApiVersion int16
     (int:metadataRequestId) # CorrelationId int32
     -1s        # ClientId string (null)
     1          # [Resources] array length
     [0x02]     # resource type int8 (topic) 
     5s "test2" # topic name
     2          # config_names count
     14s "cleanup.policy"
     19s "delete.retention.ms"

write 89        # Size int32
      ${metadataRequestId}  # CorrelationId int32
      0         # throttle_time_ms int32
      1         # resources count
      0s        # error code
      -1s       # error message
      [0x02]    # resource type
      5s "test2"# topic name
      2         # config entries count
      14s "cleanup.policy"  # config name
      6s "delete"           # config  value
      [0x00]    # read_only boolean
      [0x01]    # is_default boolean
      [0x00]    # is_sensitive boolean
      19s "delete.retention.ms"
      8s "86400000"
      [0x00]    # read_only boolean
      [0x01]    # is_default boolean
      [0x00]    # is_sensitive boolean

write notify SENT_DESCRIBE_CONFIGS_RESPONSE_TWO


# Fetch connection
accepted
read nukleus:begin.ext ${tcp:beginEx()
                            .typeId(nukleus:id("tcp"))
                            .localAddress("0.0.0.0")
                            .localPort(0)
                            .remoteHost("broker1")
                            .remotePort(9093)
                            .build()}
connected

# list offsets request
read 41         # Size int32
     2s         # ApiKey (ListOffsets)
     2s         # ApiVersion 
     (int:listOffsetsRequestId) # CorrelationId 
     -1s        # ClientId string (null)
     -1         # replicaId
     [0x00]     # isolation level (0=READ_UNCOMMITTED)
     1          # topic count 
     4s "test"  # topic name
     1          # partition count
     0          # partition
     -1L        # timestamp (high water mark offset)

write 44        # Size int32
      ${listOffsetsRequestId}  # CorrelationId int32
      0         # throttle_time_ms int32
      1         # topic count
      4s "test" # topic name 
      1         # partition count
      0         # partition
      0s        # error code
      -1L       # timestamp (from a real example)
      10L       # offset

# fetch from "test" at reported offset
read 65         # Size
     1s      # Fetch
     5s
     (int:requestId)
     -1s
     -1
     [0..4]
     1
     [0..4]
     [0x00]
     1
     4s "test"
     1
     0          # Partition
     10L        # offset
     -1L
     [0..4]

read notify RECEIVED_FETCH_REQUEST_ONE

write await SEND_FETCH_RESPONSE_ONE

write 60        # Size
      ${requestId}
      0
      1
      4s "test"
      1
      0         # Partition
      0s        # partition error code
      0L        # high_watermark
      -1L       # last_stable_offset
      0L        # log_start_offset
      -1        # aborted_transactions (null)
      0         # length of record set

# fetch from "test" at reported offset
read 65         # Size
     1s      # Fetch
     5s
     (int:requestId)
     -1s
     -1
     [0..4]
     1
     [0..4]
     [0x00]
     1
     4s "test"
     1
     0          # Partition
     10L        # offset
     -1L
     [0..4]

write 60        # Size
      ${requestId}
      0
      1
      4s "test"
      1
      0         # Partition
      0s        # partition error code
      0L        # high_watermark
      -1L       # last_stable_offset
      0L        # log_start_offset
      -1        # aborted_transactions (null)
      0         # length of record set

# list offsets request
read 42         # Size int32
     2s         # ApiKey (ListOffsets)
     2s         # ApiVersion 
     (int:listOffsetsRequestId) # CorrelationId 
     -1s        # ClientId string (null)
     -1         # replicaId
     [0x00]     # isolation level (0=READ_UNCOMMITTED)
     1          # topic count 
     5s "test2" # topic name
     1          # partition count
     0          # partition
     -1L        # timestamp (high water mark offset)

write 45        # Size int32
      ${listOffsetsRequestId}  # CorrelationId int32
      0         # throttle_time_ms int32
      1         # topic count
      5s "test2"# topic name 
      1         # partition count
      0         # partition
      0s        # error code
      -1L       # timestamp (from a real example)
      15L       # offset

# fetch from "test" and "test2" at reported offsets
read 100
     1s
     5s
     (int:requestId)
     -1s
     -1
     [0..4]
     1
     [0..4]
     [0x00]
     2
     4s "test"
     1
     0
     10L
     -1L
     [0..4]
     5s "test2"
     1
     0
     15L
     -1L
     [0..4]


# historical fetch connection
accepted
read nukleus:begin.ext ${tcp:beginEx()
                            .typeId(nukleus:id("tcp"))
                            .localAddress("0.0.0.0")
                            .localPort(0)
                            .remoteHost("broker1")
                            .remotePort(9093)
                            .build()}
connected
